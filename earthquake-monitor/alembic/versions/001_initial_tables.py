"""Initial tables for earthquake monitoring

Revision ID: 001_initial_tables
Revises:
Create Date: 2025-09-21 19:15:00.000000

"""

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "abc123def456"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "earthquakes",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("latitude", sa.Float(), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.Column("depth", sa.Float(), nullable=False),
        sa.Column("magnitude_value", sa.Float(), nullable=False),
        sa.Column("magnitude_scale", sa.String(length=20), nullable=False),
        sa.Column("occurred_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("source", sa.String(length=50), nullable=False),
        sa.Column("external_id", sa.String(length=100), nullable=True),
        sa.Column("is_reviewed", sa.Boolean(), nullable=False),
        sa.Column("raw_data", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_earthquakes_external_id"), "earthquakes", ["external_id"], unique=True
    )
    op.create_index(
        op.f("ix_earthquakes_is_reviewed"), "earthquakes", ["is_reviewed"], unique=False
    )
    op.create_index(
        op.f("ix_earthquakes_latitude"), "earthquakes", ["latitude"], unique=False
    )
    op.create_index(
        op.f("ix_earthquakes_longitude"), "earthquakes", ["longitude"], unique=False
    )
    op.create_index(
        op.f("ix_earthquakes_magnitude_value"),
        "earthquakes",
        ["magnitude_value"],
        unique=False,
    )
    op.create_index(
        op.f("ix_earthquakes_occurred_at"), "earthquakes", ["occurred_at"], unique=False
    )
    op.create_index(
        op.f("ix_earthquakes_source"), "earthquakes", ["source"], unique=False
    )
    op.create_table(
        "users",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("full_name", sa.String(length=100), nullable=False),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("last_login", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_earthquakes_source"), table_name="earthquakes")
    op.drop_index(op.f("ix_earthquakes_occurred_at"), table_name="earthquakes")
    op.drop_index(op.f("ix_earthquakes_magnitude_value"), table_name="earthquakes")
    op.drop_index(op.f("ix_earthquakes_longitude"), table_name="earthquakes")
    op.drop_index(op.f("ix_earthquakes_latitude"), table_name="earthquakes")
    op.drop_index(op.f("ix_earthquakes_is_reviewed"), table_name="earthquakes")
    op.drop_index(op.f("ix_earthquakes_external_id"), table_name="earthquakes")
    op.drop_table("earthquakes")
    # ### end Alembic commands ###
