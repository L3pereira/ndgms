# =============================================================================
# 🌍 EARTHQUAKE MONITOR API - ENVIRONMENT CONFIGURATION
# =============================================================================
# Complete configuration template for the NDGMS Earthquake Monitoring System
# Copy this file to .env.dev (development) or .env.prod (production)
# and update values according to your environment requirements.
# =============================================================================

# -----------------------------------------------------------------------------
# 🗄️ DATABASE CONFIGURATION
# -----------------------------------------------------------------------------
# PostgreSQL connection string with PostGIS extension support
# Format: postgresql://[user]:[password]@[host]:[port]/[database]
# - For Docker: use service name 'db' as host
# - For local development: use 'localhost'
DATABASE_URL=postgresql://postgres:password@db:5432/earthquake_monitor_dev

# Repository implementation type (postgresql/mock)
# - postgresql: Use PostgreSQL with PostGIS for production/development
# - mock: Use in-memory mock repository for testing
REPOSITORY_TYPE=postgresql

# -----------------------------------------------------------------------------
# 🔐 AUTHENTICATION & SECURITY
# -----------------------------------------------------------------------------
# Secret key for general application security (sessions, CSRF, etc.)
# SECURITY: Change to strong random value in production!
SECRET_KEY=dev-secret-key-change-in-production

# JWT token encryption key - used for user authentication tokens
# SECURITY: Must be different from SECRET_KEY and changed in production!
JWT_SECRET_KEY=dev-jwt-secret-change-in-production

# JWT algorithm for token signing (HS256 recommended)
JWT_ALGORITHM=HS256

# JWT access token expiration time in minutes
# Recommendation: 30-60 minutes for security vs usability balance
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# -----------------------------------------------------------------------------
# 🌐 CORS & SECURITY CONFIGURATION
# -----------------------------------------------------------------------------
# Allowed origins for CORS (Cross-Origin Resource Sharing)
# Format: comma-separated list of URLs
# - Development: Include localhost variants
# - Production: Only include your actual frontend domains
# Example: https://app.example.com,https://admin.example.com
ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:8000

# Allowed hosts for HTTP Host header validation
# Format: comma-separated list of hostnames/IPs
# - Development: Include localhost and container networking
# - Production: Only include your actual domains
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# -----------------------------------------------------------------------------
# 📊 APPLICATION CONFIGURATION
# -----------------------------------------------------------------------------
# Logging level (DEBUG/INFO/WARNING/ERROR/CRITICAL)
# - DEBUG: Detailed information for debugging
# - INFO: General information about application operation
# - WARNING: Warning messages for potential issues
LOG_LEVEL=DEBUG

# Debug mode (true/false)
# - true: Enable debug mode with detailed error messages
# - false: Production mode with minimal error exposure
DEBUG=true

# Application display name
APP_NAME=Earthquake Monitor API (Dev)

# Application version for API documentation
APP_VERSION=1.0.0

# Server host binding (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
HOST=0.0.0.0

# Server port number
PORT=8000

# -----------------------------------------------------------------------------
# 🌍 USGS API CONFIGURATION
# -----------------------------------------------------------------------------
# USGS Earthquake Data Service API endpoints
# FDSNWS Event Web Service - for historical earthquake data queries
USGS_API_BASE_URL=https://earthquake.usgs.gov/fdsnws/event/1

# GeoJSON Earthquake Feeds - for real-time earthquake data
USGS_GEOJSON_BASE_URL=https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary

# HTTP timeout for USGS API requests (seconds)
# Recommended: 30-60 seconds for reliable external API calls
USGS_API_TIMEOUT=30

# -----------------------------------------------------------------------------
# ⏰ SCHEDULER CONFIGURATION - AUTOMATIC INGESTION
# -----------------------------------------------------------------------------
# Enable/disable the background scheduler service
# - true: Scheduler service available (can be started via API)
# - false: Completely disable scheduler functionality
SCHEDULER_ENABLED=true

# Automatically start scheduler on application startup
# - true: Begin ingesting earthquake data immediately when app starts
# - false: Require manual start via /api/v1/scheduler/start endpoint
SCHEDULER_AUTO_START=true

# Earthquake data ingestion interval (minutes)
# How often to fetch new earthquake data from USGS
# Recommendations:
# - Development: 5-10 minutes for quick testing
# - Production: 30-60 minutes to respect API rate limits
USGS_INGESTION_INTERVAL_MINUTES=5

# Minimum magnitude filter for ingested earthquakes
# - all: Fetch all earthquakes regardless of magnitude
# - 1.0: Include micro earthquakes (very sensitive)
# - 2.5: Include minor earthquakes (good for testing)
# - 4.5: Include light earthquakes (production recommended)
# - 5.0: Include moderate+ earthquakes only
USGS_INGESTION_MIN_MAGNITUDE=2.5

# Time period for earthquake data fetching
# Options: hour, day, week, month
# - hour: Last hour of earthquakes (real-time monitoring)
# - day: Last 24 hours (recommended for most use cases)
# - week: Last 7 days (initial data population)
USGS_INGESTION_PERIOD=hour

# Maximum number of earthquakes to fetch per ingestion cycle
# Prevents overwhelming the system with too much data
# Recommended: 50-200 depending on magnitude filter and period
USGS_INGESTION_MAX_EARTHQUAKES=50

# -----------------------------------------------------------------------------
# 🧪 TESTING CONFIGURATION
# -----------------------------------------------------------------------------
# Testing mode flag
# - true: Enable testing mode (disables certain features, uses test data)
# - false: Normal operation mode
# Note: Automatically set to true during test execution
TESTING=false

# -----------------------------------------------------------------------------
# 📡 WEBSOCKET FILTERING CONFIGURATION
# -----------------------------------------------------------------------------
# Real-time WebSocket notification filtering and performance tuning

# Minimum magnitude for WebSocket notifications
# Only earthquakes with magnitude >= this value will be broadcast
# Prevents flooding clients with micro-earthquake notifications
# Recommended: 1.0-3.0 depending on client needs
WEBSOCKET_MIN_MAGNITUDE=1.0

# Maximum WebSocket messages per minute per client
# Rate limiting to prevent overwhelming frontend clients
# Recommended: 60-120 for smooth real-time experience
WEBSOCKET_MAX_PER_MINUTE=100

# Throttle delay between WebSocket broadcasts (seconds)
# Prevents message queue overload during high earthquake activity
# Recommended: 0.1-1.0 seconds
WEBSOCKET_THROTTLE_SECONDS=0.15

# Maximum age of earthquakes for WebSocket notifications (minutes)
# Only broadcast earthquakes that occurred within this time window
# Prevents broadcasting old earthquakes during initial data ingestion
# Recommended: 60-1440 minutes (1 hour to 1 day)
WEBSOCKET_MAX_AGE_MINUTES=1440
